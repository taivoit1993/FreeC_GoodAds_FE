{"ast":null,"code":"var _jsxFileName = \"/Users/taivo/Documents/Work/FreeC/Google Ads/FrontEnd/src/components/filter/department.filter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { useQuery } from \"react-query\";\nimport { getDepartments } from \"../../ApiService/departments.api\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputDepartmentFilter = props => {\n  _s();\n  const [departments, setDepartments] = React.useState([]);\n  const [defaultValue, setDefaultValue] = React.useState(props.multiple ? [] : null);\n  useEffect(() => {\n    if (props.data && departments.length > 0) {\n      let value = _.find(departments, item => {\n        return item.id === props.data;\n      });\n      setDefaultValue(value);\n    }\n  }, [props.data, departments]);\n  //API get all department\n  useQuery({\n    queryKey: [\"getAllDepartments\"],\n    queryFn: () => getDepartments({\n      params: {\n        skip_page: 1\n      }\n    }),\n    onSuccess: data => {\n      setDepartments(data.data);\n    }\n  });\n  const handleOnChange = (event, values) => {\n    setDefaultValue(values);\n    props.onChange(values);\n  };\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    multiple: props.multiple,\n    id: \"combo-box-department\",\n    options: departments,\n    getOptionLabel: option => option.name,\n    value: defaultValue,\n    onChange: handleOnChange,\n    size: props.size || \"small\",\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      label: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 38\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(InputDepartmentFilter, \"hCwlB2eATlwCQCWhi3cqk1l9wAk=\", false, function () {\n  return [useQuery];\n});\n_c = InputDepartmentFilter;\nexport default InputDepartmentFilter;\nvar _c;\n$RefreshReg$(_c, \"InputDepartmentFilter\");","map":{"version":3,"names":["React","useEffect","Autocomplete","TextField","useQuery","getDepartments","_","jsxDEV","_jsxDEV","InputDepartmentFilter","props","_s","departments","setDepartments","useState","defaultValue","setDefaultValue","multiple","data","length","value","find","item","id","queryKey","queryFn","params","skip_page","onSuccess","handleOnChange","event","values","onChange","options","getOptionLabel","option","name","size","renderInput","label","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/taivo/Documents/Work/FreeC/Google Ads/FrontEnd/src/components/filter/department.filter.tsx"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {Autocomplete, TextField} from \"@mui/material\";\nimport {useQuery} from \"react-query\";\nimport {getDepartments} from \"../../ApiService/departments.api\";\nimport _ from \"lodash\";\n\nconst InputDepartmentFilter = (props: any) => {\n    const [departments, setDepartments] = React.useState([] as any)\n    const [defaultValue, setDefaultValue] = React.useState(props.multiple ? [] : null as any)\n    useEffect(() => {\n        if(props.data && departments.length > 0){\n            let value = _.find(departments,(item) => {\n                return item.id === props.data;\n            })\n            setDefaultValue(value);\n        }\n    },[props.data,departments])\n    //API get all department\n    useQuery({\n        queryKey: [\"getAllDepartments\"],\n        queryFn: () => getDepartments({params: {skip_page: 1}}),\n        onSuccess: (data) => {\n            setDepartments(data.data);\n        }\n    });\n\n    const handleOnChange = (event: any, values: any) => {\n        setDefaultValue(values);\n        props.onChange(values);\n    }\n    return (\n        <Autocomplete\n            multiple={props.multiple}\n            id=\"combo-box-department\"\n            options={departments}\n            getOptionLabel={(option) => option.name}\n            value={defaultValue}\n            onChange={handleOnChange}\n            size={props.size || \"small\"}\n            renderInput={(params) => <TextField {...params} label={props.title}/>}\n        />\n    );\n};\n\nexport default InputDepartmentFilter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAAQC,YAAY,EAAEC,SAAS,QAAO,eAAe;AACrD,SAAQC,QAAQ,QAAO,aAAa;AACpC,SAAQC,cAAc,QAAO,kCAAkC;AAC/D,OAAOC,CAAC,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,qBAAqB,GAAIC,KAAU,IAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,EAAE,CAAQ;EAC/D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,KAAK,CAACc,QAAQ,CAACJ,KAAK,CAACO,QAAQ,GAAG,EAAE,GAAG,IAAW,CAAC;EACzFhB,SAAS,CAAC,MAAM;IACZ,IAAGS,KAAK,CAACQ,IAAI,IAAIN,WAAW,CAACO,MAAM,GAAG,CAAC,EAAC;MACpC,IAAIC,KAAK,GAAGd,CAAC,CAACe,IAAI,CAACT,WAAW,EAAEU,IAAI,IAAK;QACrC,OAAOA,IAAI,CAACC,EAAE,KAAKb,KAAK,CAACQ,IAAI;MACjC,CAAC,CAAC;MACFF,eAAe,CAACI,KAAK,CAAC;IAC1B;EACJ,CAAC,EAAC,CAACV,KAAK,CAACQ,IAAI,EAACN,WAAW,CAAC,CAAC;EAC3B;EACAR,QAAQ,CAAC;IACLoB,QAAQ,EAAE,CAAC,mBAAmB,CAAC;IAC/BC,OAAO,EAAEA,CAAA,KAAMpB,cAAc,CAAC;MAACqB,MAAM,EAAE;QAACC,SAAS,EAAE;MAAC;IAAC,CAAC,CAAC;IACvDC,SAAS,EAAGV,IAAI,IAAK;MACjBL,cAAc,CAACK,IAAI,CAACA,IAAI,CAAC;IAC7B;EACJ,CAAC,CAAC;EAEF,MAAMW,cAAc,GAAGA,CAACC,KAAU,EAAEC,MAAW,KAAK;IAChDf,eAAe,CAACe,MAAM,CAAC;IACvBrB,KAAK,CAACsB,QAAQ,CAACD,MAAM,CAAC;EAC1B,CAAC;EACD,oBACIvB,OAAA,CAACN,YAAY;IACTe,QAAQ,EAAEP,KAAK,CAACO,QAAS;IACzBM,EAAE,EAAC,sBAAsB;IACzBU,OAAO,EAAErB,WAAY;IACrBsB,cAAc,EAAGC,MAAM,IAAKA,MAAM,CAACC,IAAK;IACxChB,KAAK,EAAEL,YAAa;IACpBiB,QAAQ,EAAEH,cAAe;IACzBQ,IAAI,EAAE3B,KAAK,CAAC2B,IAAI,IAAI,OAAQ;IAC5BC,WAAW,EAAGZ,MAAM,iBAAKlB,OAAA,CAACL,SAAS;MAAA,GAAKuB,MAAM;MAAEa,KAAK,EAAE7B,KAAK,CAAC8B;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACxE;AAEV,CAAC;AAACjC,EAAA,CApCIF,qBAAqB;EAAA,QAYvBL,QAAQ;AAAA;AAAAyC,EAAA,GAZNpC,qBAAqB;AAsC3B,eAAeA,qBAAqB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}