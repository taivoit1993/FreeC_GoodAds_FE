{"ast":null,"code":"import { validateFieldsNatively as e, toNestError as t } from \"@hookform/resolvers\";\nimport { appendErrors as r } from \"react-hook-form\";\nvar o = function (o, n, a) {\n  return void 0 === n && (n = {}), void 0 === a && (a = {}), function (s, i, c) {\n    try {\n      return Promise.resolve(function (t, r) {\n        try {\n          var u = (n.context && \"development\" === process.env.NODE_ENV && console.warn(\"You should not used the yup options context. Please, use the 'useForm' context object instead\"), Promise.resolve(o[\"sync\" === a.mode ? \"validateSync\" : \"validate\"](s, Object.assign({\n            abortEarly: !1\n          }, n, {\n            context: i\n          }))).then(function (t) {\n            return c.shouldUseNativeValidation && e({}, c), {\n              values: a.rawValues ? s : t,\n              errors: {}\n            };\n          }));\n        } catch (e) {\n          return r(e);\n        }\n        return u && u.then ? u.then(void 0, r) : u;\n      }(0, function (e) {\n        if (!e.inner) throw e;\n        return {\n          values: {},\n          errors: t((o = e, n = !c.shouldUseNativeValidation && \"all\" === c.criteriaMode, (o.inner || []).reduce(function (e, t) {\n            if (e[t.path] || (e[t.path] = {\n              message: t.message,\n              type: t.type\n            }), n) {\n              var o = e[t.path].types,\n                a = o && o[t.type];\n              e[t.path] = r(t.path, n, e, t.type, a ? [].concat(a, t.message) : t.message);\n            }\n            return e;\n          }, {})), c)\n        };\n        var o, n;\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n};\nexport { o as yupResolver };","map":{"version":3,"names":["o","yupResolver","n","a","s","i","c","Promise","resolve","t","r","u","context","process","env","NODE_ENV","console","warn","mode","Object","assign","abortEarly","then","shouldUseNativeValidation","e","values","rawValues","errors","inner","criteriaMode","reduce","path","message","type","types","concat","reject"],"sources":["/Users/taivo/Documents/Work/FreeC/Google Ads/FrontEnd/node_modules/@hookform/resolvers/yup/src/yup.ts"],"sourcesContent":["import * as Yup from 'yup';\nimport { toNestError, validateFieldsNatively } from '@hookform/resolvers';\nimport { appendErrors, FieldError } from 'react-hook-form';\nimport { Resolver } from './types';\n\n/**\n * Why `path!` ? because it could be `undefined` in some case\n * https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n */\nconst parseErrorSchema = (\n  error: Yup.ValidationError,\n  validateAllFieldCriteria: boolean,\n) => {\n  return (error.inner || []).reduce<Record<string, FieldError>>(\n    (previous, error) => {\n      if (!previous[error.path!]) {\n        previous[error.path!] = { message: error.message, type: error.type! };\n      }\n\n      if (validateAllFieldCriteria) {\n        const types = previous[error.path!].types;\n        const messages = types && types[error.type!];\n\n        previous[error.path!] = appendErrors(\n          error.path!,\n          validateAllFieldCriteria,\n          previous,\n          error.type!,\n          messages\n            ? ([] as string[]).concat(messages as string[], error.message)\n            : error.message,\n        ) as FieldError;\n      }\n\n      return previous;\n    },\n    {},\n  );\n};\n\nexport const yupResolver: Resolver =\n  (schema, schemaOptions = {}, resolverOptions = {}) =>\n  async (values, context, options) => {\n    try {\n      if (schemaOptions.context && process.env.NODE_ENV === 'development') {\n        // eslint-disable-next-line no-console\n        console.warn(\n          \"You should not used the yup options context. Please, use the 'useForm' context object instead\",\n        );\n      }\n\n      const result = await schema[\n        resolverOptions.mode === 'sync' ? 'validateSync' : 'validate'\n      ](\n        values,\n        Object.assign({ abortEarly: false }, schemaOptions, { context }),\n      );\n\n      options.shouldUseNativeValidation && validateFieldsNatively({}, options);\n\n      return {\n        values: resolverOptions.rawValues ? values : result,\n        errors: {},\n      };\n    } catch (e: any) {\n      if (!e.inner) {\n        throw e;\n      }\n\n      return {\n        values: {},\n        errors: toNestError(\n          parseErrorSchema(\n            e,\n            !options.shouldUseNativeValidation &&\n              options.criteriaMode === 'all',\n          ),\n          options,\n        ),\n      };\n    }\n  };\n"],"mappings":";;AASA,IA+BaA,CAAA,GACX,SAAAC,CAACD,CAAA,EAAQE,CAAA,EAAoBC,CAAA;EAAA,kBAApBD,CAAA,KAAAA,CAAA,GAAgB,gBAAIC,CAAA,KAAAA,CAAA,GAAkB,eACxCC,CAAA,EAAQC,CAAA,EAASC,CAAA;IAAA;MAAA,OAAAC,OAAA,CAAAC,OAAA,WAAAC,CAAA,EAAAC,CAAA;QAAA;UAAA,IAAAC,CAAA,IAEhBT,CAAA,CAAcU,OAAA,IAAoC,kBAAzBC,OAAA,CAAQC,GAAA,CAAIC,QAAA,IAEvCC,OAAA,CAAQC,IAAA,CACN,kGAAAV,OAAA,CAAAC,OAAA,CAIiBR,CAAA,CACM,WAAzBG,CAAA,CAAgBe,IAAA,GAAkB,iBAAiB,YAEnDd,CAAA,EACAe,MAAA,CAAOC,MAAA,CAAO;YAAEC,UAAA,GAAY;UAAA,GAASnB,CAAA,EAAe;YAAEU,OAAA,EAAAP;UAAA,KAAAiB,IAAA,WAJlDb,CAAA;YASN,OAFAH,CAAA,CAAQiB,yBAAA,IAA6BC,CAAA,CAAuB,IAAIlB,CAAA,GAEzD;cACLmB,MAAA,EAAQtB,CAAA,CAAgBuB,SAAA,GAAYtB,CAAA,GAASK,CAAA;cAC7CkB,MAAA,EAAQ;YAAA;UAAA;QAAA,SAAAH,CAAA;UAAA,OAAAd,CAAA,CAAAc,CAAA;QAAA;QAAA,OAAAb,CAAA,IAAAA,CAAA,CAAAW,IAAA,GAAAX,CAAA,CAAAW,IAAA,SAAAZ,CAAA,IAAAC,CAAA;MAAA,eAEHa,CAAA;QACP,KAAKA,CAAA,CAAEI,KAAA,EACL,MAAMJ,CAAA;QAGR,OAAO;UACLC,MAAA,EAAQ;UACRE,MAAA,EAAQlB,CAAA,EA7DdT,CAAA,GA+DUwB,CAAA,EA9DVtB,CAAA,IA+DWI,CAAA,CAAQiB,yBAAA,IACkB,UAAzBjB,CAAA,CAAQuB,YAAA,GA9DZ7B,CAAA,CAAM4B,KAAA,IAAS,IAAIE,MAAA,CACzB,UAACN,CAAA,EAAUf,CAAA;YAKT,IAJKe,CAAA,CAASf,CAAA,CAAMsB,IAAA,MAClBP,CAAA,CAASf,CAAA,CAAMsB,IAAA,IAAS;cAAEC,OAAA,EAASvB,CAAA,CAAMuB,OAAA;cAASC,IAAA,EAAMxB,CAAA,CAAMwB;YAAA,IAG5D/B,CAAA,EAA0B;cAC5B,IAAMF,CAAA,GAAQwB,CAAA,CAASf,CAAA,CAAMsB,IAAA,EAAOG,KAAA;gBAC9B/B,CAAA,GAAWH,CAAA,IAASA,CAAA,CAAMS,CAAA,CAAMwB,IAAA;cAEtCT,CAAA,CAASf,CAAA,CAAMsB,IAAA,IAASrB,CAAA,CACtBD,CAAA,CAAMsB,IAAA,EACN7B,CAAA,EACAsB,CAAA,EACAf,CAAA,CAAMwB,IAAA,EACN9B,CAAA,GACK,GAAgBgC,MAAA,CAAOhC,CAAA,EAAsBM,CAAA,CAAMuB,OAAA,IACpDvB,CAAA,CAAMuB,OAAA;YAAA;YAId,OAAOR,CAAA;UAAA,GAET,MAyCMlB,CAAA;QAAA;QApEe,IACvBN,CAAA,EACAE,CAAA;MAAA;IAAA,CA8BA,QAAAsB,CAAA;MAAA,OAAAjB,OAAA,CAAA6B,MAAA,CAAAZ,CAAA;IAAA;EAAA;AAAA;AAAA,SAAAxB,CAAA,IAAAC,WAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}