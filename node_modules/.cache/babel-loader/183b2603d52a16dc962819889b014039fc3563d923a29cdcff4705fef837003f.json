{"ast":null,"code":"var _jsxFileName = \"/Users/taivo/Documents/Work/FreeC/Google Ads/FrontEnd/src/pages/auth/login.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport AlertComponent from '../../components/alert.component';\nimport ProcessComponent from '../../components/process.component';\nimport { CreateUserValidation } from './validation/login.validation';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useMutation, useQuery } from \"react-query\";\nimport { login } from \"../../ApiService/auth.api\";\nimport { Helmet } from \"react-helmet\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginComponent = () => {\n  _s();\n  let navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(CreateUserValidation)\n  });\n  const {\n    isLoading\n  } = useQuery({\n    queryKey: [\"getUsers\", page, rowsPerPage, tabIndex, keyWord, departmentId, msnv],\n    queryFn: () => getUsers({\n      params: {\n        page: page + 1,\n        limit: rowsPerPage,\n        status: tabIndex,\n        key_word: keyWord,\n        msnv: msnv,\n        department_id: departmentId,\n        user_id: code\n      }\n    }),\n    onSuccess: data => {\n      setUsers(data.data);\n      setMeta(data.meta);\n    }\n  });\n  const {\n    mutate\n  } = useMutation(\"login\", info => {\n    return login(info);\n  }, {\n    onSuccess: data => {\n      navigate('/users');\n    }\n  });\n  const onSubmitHandler = info => {\n    mutate(info);\n  };\n\n  // const responseMessage = (response: any) => {\n  //     console.log(response);\n  // };\n  // const errorMessage = (error: any) => {\n  //     console.log(error);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"script\", {\n        src: \"https://accounts.google.com/gsi/client\",\n        async: true,\n        defer: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AlertComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProcessComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App login\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        method: \"post\",\n        onSubmit: handleSubmit(onSubmitHandler),\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          mb: 3,\n          align: \"center\",\n          children: \"Google Authorization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          sx: {\n            fontWeight: 600\n          },\n          children: \"\\u0110\\u0102NG NH\\u1EACP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(LoginComponent, \"q8aVumRjl62acCtgnGo/LWU/wLI=\", false, function () {\n  return [useNavigate, useForm, useQuery, useMutation];\n});\n_c = LoginComponent;\nexport default LoginComponent;\nvar _c;\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"names":["Button","Typography","useNavigate","AlertComponent","ProcessComponent","CreateUserValidation","useForm","yupResolver","useMutation","useQuery","login","Helmet","React","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginComponent","_s","navigate","register","handleSubmit","formState","errors","resolver","isLoading","queryKey","page","rowsPerPage","tabIndex","keyWord","departmentId","msnv","queryFn","getUsers","params","limit","status","key_word","department_id","user_id","code","onSuccess","data","setUsers","setMeta","meta","mutate","info","onSubmitHandler","children","src","async","defer","fileName","_jsxFileName","lineNumber","columnNumber","className","method","onSubmit","variant","component","mb","align","type","color","sx","fontWeight","_c","$RefreshReg$"],"sources":["/Users/taivo/Documents/Work/FreeC/Google Ads/FrontEnd/src/pages/auth/login.tsx"],"sourcesContent":["import {Button, Checkbox, FormControlLabel, Grid, TextField, Typography} from '@mui/material';\nimport {useNavigate} from 'react-router-dom';\nimport AlertComponent from '../../components/alert.component';\nimport ProcessComponent from '../../components/process.component';\nimport {CreateUserValidation} from './validation/login.validation';\nimport {useForm} from \"react-hook-form\";\nimport {yupResolver} from '@hookform/resolvers/yup';\nimport {useMutation, useQuery} from \"react-query\";\nimport {login} from \"../../ApiService/auth.api\";\nimport {Helmet} from \"react-helmet\";\nimport React, {useEffect} from \"react\";\nimport {GoogleLogin} from \"@react-oauth/google\";\n\nconst LoginComponent = () => {\n    let navigate = useNavigate();\n    const {register, handleSubmit, formState: {errors}} = useForm({\n        resolver: yupResolver(CreateUserValidation)\n    });\n\n    const {  isLoading } = useQuery({\n        queryKey: [\"getUsers\", page, rowsPerPage, tabIndex, keyWord, departmentId, msnv],\n        queryFn: () => getUsers({\n            params: {\n                page: page + 1,\n                limit: rowsPerPage,\n                status: tabIndex,\n                key_word: keyWord,\n                msnv: msnv,\n                department_id: departmentId,\n                user_id: code,\n            }\n        }),\n        onSuccess: (data) => {\n            setUsers(data.data);\n            setMeta(data.meta);\n        },\n    });\n    const {mutate} = useMutation(\"login\", (info: any) => {\n            return login(info);\n        },\n        {\n            onSuccess: (data) => {\n                navigate('/users');\n            }\n        }\n    )\n    const onSubmitHandler = (info: any) => {\n        mutate(info);\n    };\n\n    // const responseMessage = (response: any) => {\n    //     console.log(response);\n    // };\n    // const errorMessage = (error: any) => {\n    //     console.log(error);\n    // };\n\n    return (\n        <>\n            <Helmet>\n                <script src=\"https://accounts.google.com/gsi/client\" async defer></script>\n            </Helmet>\n            <AlertComponent/>\n            <ProcessComponent/>\n            <div className='App login'>\n                <form className=\"form\" method=\"post\" onSubmit={handleSubmit(onSubmitHandler)}>\n                    <Typography variant=\"h5\" component=\"h2\" mb={3} align=\"center\">\n                        Google Authorization\n                    </Typography>\n                    {/*<TextField*/}\n                    {/*    id=\"email\"*/}\n                    {/*    required*/}\n                    {/*    sx={{paddingBottom: 2}}*/}\n                    {/*    variant=\"outlined\"*/}\n                    {/*    label=\"Email\"*/}\n                    {/*    {...register('email')}*/}\n                    {/*    error={!!errors.email}*/}\n                    {/*    helperText={errors.email && String(errors.email?.message)}*/}\n                    {/*/>*/}\n                    {/*<TextField*/}\n                    {/*    id=\"password\"*/}\n                    {/*    required*/}\n                    {/*    type=\"password\"*/}\n                    {/*    sx={{paddingBottom: 2}}*/}\n                    {/*    variant=\"outlined\"*/}\n                    {/*    label=\"Mật Khẩu\"*/}\n                    {/*    {...register('password')}*/}\n                    {/*    error={!!errors.password}*/}\n                    {/*    helperText={errors.password && String(errors.password?.message)}*/}\n                    {/*/>*/}\n                    {/*<Grid container spacing={4} pt={0.5}>*/}\n                    {/*    <Grid item xs={6} sx={{display: 'flex', alignContent: 'center', alignItems: 'flex-start'}}>*/}\n                    {/*        <FormControlLabel label=\"Remeber me\" defaultChecked control={<Checkbox/>}/>*/}\n                    {/*    </Grid>*/}\n                    {/*    <Grid item xs={6}>*/}\n                    {/*        <Typography variant=\"body1\" component=\"a\" mb={3} align=\"center\" href='#'*/}\n                    {/*                    sx={{*/}\n                    {/*                        display: 'flex',*/}\n                    {/*                        flexDirection: 'row-reverse',*/}\n                    {/*                        justifyContent: 'flext-start',*/}\n                    {/*                        mt: '0.5rem'*/}\n                    {/*                    }}>*/}\n                    {/*            Quên mật khẩu?*/}\n                    {/*        </Typography>*/}\n\n                    {/*    </Grid>*/}\n                    {/*</Grid>*/}\n                    {/*<Button type=\"submit\" color=\"primary\" variant=\"contained\" sx={{fontWeight: 600}}>*/}\n                    {/*    ĐĂNG NHẬP*/}\n                    {/*</Button>*/}\n                    {/*<GoogleLogin onSuccess={responseMessage}/>*/}\n                    <Button type=\"submit\" color=\"primary\" variant=\"contained\" sx={{fontWeight: 600}}>\n                        ĐĂNG NHẬP\n                    </Button>\n                </form>\n            </div>\n        </>\n    );\n};\n\nexport default LoginComponent;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}